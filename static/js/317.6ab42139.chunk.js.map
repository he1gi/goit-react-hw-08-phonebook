{"version":3,"file":"static/js/317.6ab42139.chunk.js","mappings":"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","sources":["Redux/contacts/contacts-selectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filtration/Filtrarion.styled.jsx","Redux/selectors.js","components/Filtration/Filtration.jsx","components/Contacts/Contacts.styled.jsx","components/Loader/Loader.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getALLContacts = ({ contacts }) => contacts.items;\n\nexport const getState = ({ contacts }) => contacts.loading;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 130px;\n  outline: 0px;\n  // border: 0px;\n  border-radius: 5px;\n  margin-left: 10px;\n  padding-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const Btn = styled.button`\n  transition: transform 0.3ms;\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  display: inline-block;\n  color: #000;\n  background-color: #99cae3;\n  font-size: 15px;\n  // border: none;\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getALLContacts } from '../../Redux/contacts/contacts-selectors';\n\nimport { addNewContact } from 'Redux/contacts/contacts-operation';\n\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Input } from './Form.styled';\nimport Button from '@mui/material/Button';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getALLContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const submitData = { name: name, number: number };\n\n    const action = addNewContact(submitData);\n\n    const findName = contacts.find(contact => {\n      return contact.name === name;\n    });\n\n    if (findName) {\n      toast.error(`${findName.name} is already in your contacts list`, {\n        autoClose: 1000,\n      });\n      return;\n    }\n\n    dispatch(action);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <Button variant=\"outlined\" size=\"small\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 130px;\n  outline: 0px;\n  // border: 0px solid;\n  border-radius: 5px;\n  margin-left: 10px;\n  padding-left: 10px;\n  margin-right: 10px;\n`;\n","export const getFilter = store => store.filter;\n","import { Input } from './Filtrarion.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../Redux/filterSlice';\nimport { getFilter } from '../../Redux/selectors';\n\nexport default function Filtration() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterInput = e => {\n    const { value } = e.target;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  return (\n    <label>\n      Write a name to find the contact:\n      <Input\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilterInput}\n      ></Input>\n    </label>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const Btn = styled.button`\n  transition: transform 0.3ms;\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  display: inline-block;\n  color: #000;\n  background-color: #99cae3;\n  font-size: 15px;\n  border: none;\n  border-radius: 5px;\n  margin-top: 10px;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 130px;\n  border-radius: 5px;\n  margin-left: 10px;\n  padding-left: 10px;\n  margin-right: 10px;\n  transition: border-color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { Circles } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <div className=\"loader\">\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#99cae3\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'Redux/selectors';\nimport { getALLContacts, getState } from 'Redux/contacts/contacts-selectors';\nimport { List, Item } from './Contacts.styled';\n\nimport Button from '@mui/material/Button';\n\nimport Loader from '../Loader';\n\nimport {\n  deleteOldContact,\n  getContacts,\n} from 'Redux/contacts/contacts-operation';\n\nexport default function Contacts() {\n  const contacts = useSelector(getALLContacts);\n  const isLoading = useSelector(getState);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const identicFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(identicFilter)\n  );\n\n  const handleDeleteContact = id => {\n    const action = deleteOldContact(id);\n    dispatch(action);\n  };\n\n  const contactsToMap = filteredContacts ? filteredContacts : contacts;\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {!isLoading &&\n        contactsToMap.map(({ name, id, number }) => (\n          <Item key={id}>\n            <p>{name}</p>\n            <p>{number}</p>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => handleDeleteContact(id)}\n            >\n              Delete\n            </Button>\n          </Item>\n        ))}\n    </List>\n  );\n}\n","import Section from 'components/Section';\nimport Form from 'components/Form';\nimport Filteration from 'components/Filtration';\nimport Contacts from 'components/Contacts';\n\nfunction ContactsPage() {\n  return (\n    <Section title=\"PhoneBook\">\n      <div>\n        <Form />\n        <h2 className=\"titleContacts\">Contacts</h2>\n        <Filteration />\n        <Contacts />\n      </div>\n    </Section>\n  );\n}\nexport default ContactsPage;\n"],"names":["getALLContacts","contacts","items","getState","loading","Input","styled","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","onSubmit","preventDefault","submitData","action","addNewContact","findName","find","contact","toast","autoClose","type","pattern","title","required","onChange","Button","variant","size","getFilter","store","filter","Filtration","setFilter","List","Item","Loader","className","height","width","color","wrapperStyle","wrapperClass","visible","Contacts","isLoading","useEffect","getContacts","identicFilter","toLowerCase","filteredContacts","includes","contactsToMap","map","id","onClick","deleteOldContact","handleDeleteContact","Section"],"sourceRoot":""}